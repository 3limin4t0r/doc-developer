<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<section id="ticketevent">
    <title>Ticket Event Module</title>
    <para>
        Ticket event modules are running right after a ticket action takes place.
Per convention these modules are located in the directory
"Kernel/System/Ticket/Event".  An ticket event module needs only the two
functions new() and Run().  The method Run() receives at least the
parameters Event, UserID, and TicketID.  For the events TicketFreeTextUpdate
and TicketFreeTimeUpdate, the parameter Counter is also passed to the Run()
method, in order to identify which free field was updated.  The article
related handler functions also receives the ArticleID as parameter.
    </para>
    <section id="ticketevent-code">
        <title>Code example</title>
        <para>
            See Kernel/System/Ticket/Event/EventModulePostTemplate.pm in the package
TemplateModule.
        </para>
    </section>
    <section id="ticketevent-configuration">
        <title>Configuration example</title>
        <para>
            See Kernel/Config/Files/EventModulePostTemplate.xml in the package
TemplateModule.
        </para>
    </section>
    <section id="ticketevent-usecases">
        <title>Use Cases</title>
        <section id="ticketevent-usecase-10">
            <title>A ticket should be unlocked after a move action.</title>
            <para>
                This standard feature has been implemented with the ticket event module
Kernel::System::Ticket::Event::ForceUnlock.  When this feature is not
wanted, then it can be turned off by unsetting the SysConfig entry
Ticket::EventModulePost###910-ForceUnlockOnMove.
            </para>
        </section>
        <section id="ticketevent-usecase-20">
            <title>Perform extra cleanup action when a ticket is deleted.</title>
            <para>
                A customized OTRS might hold non-standard data in additional database
tables.  When a ticket is deleteted then this additional data needs to be
deleted.  This functionality can be achieved with a ticket event module
listening to 'TicketDelete' events.
            </para>
        </section>
        <section id="ticketevent-usecase-30">
            <title>New tickets should be twittered.</title>
            <para>
                A ticket event module listening to 'TicketCreate' can send out tweets.
            </para>
        </section>
    </section>
    <section id="ticketevent-caveats">
        <title>Caveats and Warnings</title>
        <para>
            No caveats are known.
        </para>
    </section>
    <section id="ticketevent-releases">
        <title>Release Availability</title>
        <para>
Ticket events have been available in OTRS since OTRS 2.0.
        </para>
        <para>
Ticket Events for OTRS 2.0: TicketCreate, TicketDelete, TicketTitleUpdate,
TicketUnlockTimeoutUpdate, TicketEscalationStartUpdate, MoveTicket,
SetCustomerData, TicketFreeTextSet, TicketFreeTimeSet, TicketPendingTimeSet,
LockSet, StateSet, OwnerSet, TicketResponsibleUpdate, PrioritySet,
HistoryAdd, HistoryDelete, TicketAccountTime, TicketMerge, ArticleCreate,
ArticleFreeTextSet, ArticleUpdate, ArticleSend, ArticleBounce,
SendAgentNotification, SendCustomerNotification, SendAutoResponse,
ArticleFlagSet;
        </para>
        <para>
Ticket Events for OTRS 2.1 and higher: TicketCreate, TicketDelete,
TicketTitleUpdate, TicketUnlockTimeoutUpdate, TicketEscalationStartUpdate,
TicketQueueUpdate (MoveTicket), TicketCustomerUpdate (SetCustomerData),
TicketFreeTextUpdate (TicketFreeTextSet), TicketFreeTimeUpdate
(TicketFreeTimeSet), TicketPendingTimeUpdate (TicketPendingTimeSet),
TicketLockUpdate (LockSet), TicketStateUpdate (StateSet), TicketOwnerUpdate
(OwnerSet), TicketResponsibleUpdate, TicketPriorityUpdate (PrioritySet),
TicketSubscribe, TicketUnsubscribe, HistoryAdd, HistoryDelete,
TicketAccountTime, TicketMerge, ArticleCreate, ArticleFreeTextUpdate
(ArticleFreeTextSet), ArticleUpdate, ArticleSend, ArticleBounce,
ArticleAgentNotification (SendAgentNotification),
ArticleCustomerNotification (SendCustomerNotification), ArticleAutoResponse
(SendAutoResponse), ArticleFlagSet, ArticleFlagDelete;
        </para>
        <para>
Ticket Events for OTRS 2.4: TicketCreate, TicketDelete, TicketTitleUpdate,
TicketUnlockTimeoutUpdate, TicketQueueUpdate(MoveTicket), TicketTypeUpdate,
TicketServiceUpdate, TicketSLAUpdate, TicketCustomerUpdate
(SetCustomerData), TicketFreeTextUpdate, TicketFreeTimeUpdate,
TicketPendingTimeUpdate (TicketPendingTimeSet), TicketLockUpdate (LockSet),
TicketStateUpdate (StateSet), TicketOwnerUpdate (OwnerSet),
TicketResponsibleUpdate, TicketPriorityUpdate (PrioritySet), HistoryAdd,
HistoryDelete, TicketAccountTime, TicketMerge, ArticleCreate,
ArticleFreeTextUpdate (ArticleFreeTextSet), ArticleUpdate, ArticleSend,
ArticleBounce, ArticleAgentNotification (SendAgentNotification),
ArticleCustomerNotification (SendCustomerNotification),
ArticleAutoResponse(SendAutoResponse), ArticleFlagSet, ArticleFlagDelete;
        </para>
    </section>
</section>
