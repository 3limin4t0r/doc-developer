<?xml version='1.0' encoding='ISO-8859-1'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<!-- $Id: database-mechanism.xml,v 1.10 2005-10-07 16:12:17 martin Exp $ -->

<chapter>
    <title>Database Mechanism</title>
    <para>
OTRS comes with an database layer to support different databases.
    </para>
    <sect1 id="database-how-it-works">
        <title>How it works</title>
        <para>
The database layer (Kernel::System::DB) has two input options: SQL and XML.
        </para>
        <sect2 id="database-sql">
            <title>SQL</title>
            <para>
The SQL interace should be used for normal database actions (SELECT, INSERT,
UPDATE, ...). It can be used like a normal Perl DBI interface.
            </para>
            <sect3 id="database-sql-do">
            <title>INSERT/UPDATE/DELETE</title>
            <programlisting format="linespecific">
$Self->{DBObject}->Do(
    SQL=> "INSERT INTO table (name, id) VALUES ('SomeName', 123)",
);

$Self->{DBObject}->Do(
    SQL=> "UPDATE table SET (name = 'SomeName', id = 123)",
);

$Self->{DBObject}->Do(
    SQL=> "DELETE FROM table WHERE id = 123",
);
            </programlisting>
            </sect3>
            <sect3 id="database-sql-select">
            <title>SELECT</title>
            <programlisting format="linespecific">
my $SQL = "SELECT id FROM table WHERE tn = '123'";

$Self->{DBObject}->Prepare(SQL => $SQL, Limit => 15);

while (my @Row = $Self->{DBObject}->FetchrowArray()) {
    $Id = $Row[0];
}
return $Id;
            </programlisting>
            <note>
                <para>
Take care that you use Limit as param and not in the SQL string because
not each database supports LIMIT in SQL string.
                </para>
            </note>
            <para>
QUOTE:
            </para>
            <programlisting format="linespecific">
my $QuotedString = $Self->{DBObject}->Quote("It's a problem!");
            </programlisting>
            </sect3>
        </sect2>
        <sect2 id="database-xml">
            <title>XML</title>
            <para>
The XML interace should be used for INSERT, CREATE and DROP tables. This way you can
write database independent applications because this syntax is different from
database to database.
            </para>
            <sect3 id="database-xml-insert">
            <title>INSERT</title>
            <programlisting format="linespecific">
&lt;Insert Table="some_table"&gt;
    &lt;Data Key="id" Value="1"/&gt;
    &lt;Data Key="description" Value="exploit" Type="Quote"/&gt;
&lt;/Insert>
            </programlisting>
            </sect3>
            <sect3 id="database-xml-create">
            <title>CREATE TABLE</title>
            <programlisting format="linespecific">
&lt;TableCreate Name="calendar_event"&gt;
    &lt;Column Name="id" Required="true" PrimaryKey="true" AutoIncrement="true" Type="BIGINT"/&gt;
    &lt;Column Name="title" Required="true" Size="250" Type="VARCHAR"/&gt;
    &lt;Column Name="content" Required="false" Size="250" Type="VARCHAR"/&gt;
    &lt;Column Name="start_time" Required="true" Type="DATE"/&gt;
    &lt;Column Name="end_time" Required="true" Type="DATE"/&gt;
    &lt;Column Name="owner_id" Required="true" Type="INTEGER"/&gt;
    &lt;Column Name="event_status" Required="true" Size="50" Type="VARCHAR"/&gt;
    &lt;Index Name="title"&gt;
        &lt;IndexColumn Name="title"/&gt;
    &lt;/Index&gt;
    &lt;Unique&gt;
        &lt;UniqueColumn Name="title"/&gt;
    &lt;/Unique&gt;
    &lt;ForeignKey ForeignTable="system_user"&gt;
        &lt;Reference Local="owner_id" Foreign="id"/&gt;
    &lt;/ForeignKey&gt;
&lt;/TableCreate&gt;
            </programlisting>
            </sect3>
            <sect3 id="database-xml-drop">
            <title>DROP TABLE</title>
            <programlisting format="linespecific">
&lt;DatabaseUninstall&gt;
    &lt;TableDrop Name="calendar_event"/&gt;
&lt;/DatabaseUninstall&gt;
            </programlisting>
            <para>
                Code to process XML:
            </para>
            <programlisting format="linespecific">
my @XMLARRAY = @{$Self->ParseXML(String => $XML)};

my @SQL = $Self->{DBObject}->SQLProcessor(
    Database => \@XMLARRAY,
);
push(@SQL, $Self->{DBObject}->SQLProcessorPost());

foreach (@SQL) {
    $Self->{DBObject}->Do(SQL => $_);
}
            </programlisting>
            </sect3>
        </sect2>
    </sect1>
    <sect1 id="database-driver">
        <title>Database Driver</title>
        <para>
            The database driver are located under <filename>$OTRS_HOME/Kernel/System/DB/*.pm</filename>.
        </para>
    </sect1>
    <sect1 id="database-supported">
        <title>Supported Databases</title>
        <itemizedlist mark="round" >
            <listitem>
                <para>MySQL</para>
            </listitem>
            <listitem>
                <para>PostgreSQL</para>
            </listitem>
            <listitem>
                <para>Oracle</para>
            </listitem>
            <listitem>
                <para>DB2 (experimental)</para>
            </listitem>
            <listitem>
                <para>MaxDB/SAPDB (experimental)</para>
            </listitem>
        </itemizedlist>
    </sect1>
</chapter>
