<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="code-style-guide-javascript">
    <title>JavaScript</title>

    <section>
        <title>Browser Handling</title>
        <para>
            All JavaScript is loaded in all browsers (no browser hacks in the template files).
            The code is responsible to decide if it has to skip or execute certain parts of itself only in certain browsers.
        </para>
    </section>

    <section>
        <title>Directory Structure</title>
        <para>
            Directory structure inside the <literal>js/</literal> folder:
        </para>
        <para>
            <programlisting format="linespecific"><![CDATA[
* js
    * thirdparty              # thirdparty libs always have the version number inside the directory
        * ckeditor-3.0.1
        * jquery-1.3.2
    * Core.Agent.*            # stuff specific to the agent interface
    * Core.Customer.*         # customer interface
    * Core.*                  # common API
            ]]></programlisting>
        </para>

        <section>
            <title>Thirdparty Code</title>
            <para>
                Every thirdparty module gets its own subdirectory: "module name"-"version number" (e.g. ckeditor-3.0.1, jquery-1.3.2).
                Inside of that, file names should not have a version number or postfix included (wrong: <literal>jquery/jquery-1.4.3.min.js</literal>,
                right: <literal>jquery-1.4.3/jquery.js</literal>).
            </para>
        </section>
    </section>

    <section>
        <title>Variables</title>
        <para>
            <itemizedlist>
                <listitem><para>Variable names should be CamelCase, just like in Perl.</para></listitem>
                <listitem><para>Variables that hold a jQuery object should start with <literal>$</literal>, for example: <literal>$Tooltip</literal>.</para></listitem>
            </itemizedlist>
        </para>
    </section>

    <section>
        <title>Functions</title>
        <para>
            <itemizedlist>
                <listitem><para>Function names should be CamelCase, just like in Perl.</para></listitem>
            </itemizedlist>
        </para>
    </section>

    <section>
        <title>Namespaces</title>
        <para>
            <itemizedlist>
                <listitem><para>TODO...</para></listitem>
            </itemizedlist>
        </para>
    </section>

    <section>
        <title>Comments</title>
        <para>
            <itemizedlist>
                <listitem><para>Single line comments are done with <literal>//</literal>.</para></listitem>
                <listitem><para>Longer comments are done with <literal>/* ... */</literal>.</para></listitem>
                <listitem><para>
                    If you comment out parts of your JavaScript code, only use <literal>//</literal>
                    because <literal>/* ... */</literal> can cause problems with Regular Expressions in the code.
                </para></listitem>
            </itemizedlist>
        </para>
    </section>

    <section>
        <title>Event Handling</title>
        <para>
            <itemizedlist>
                <listitem><para>
                    Always use <literal>$.bind()</literal> instead of the event-shorthand methods of jQuery for better
                    readability (wrong: <literal>$SomeObject.click(...)</literal>, right: <literal>$SomeObject.bind('click', ...</literal>).
                </para></listitem>
                <listitem><para>
                    Do not use <literal>$.live()</literal>!
                    We had severe performance issues with <literal>$.live()</literal> in correlation with mouse events.
                    Until it can be verified that <literal>$.live()</literal> works with other event types without problems.
                </para></listitem>
                <listitem><para>
                    If you <literal>$.bind()</literal> events, make sure to <literal>$.unbind()</literal> them beforehand,
                    to make sure that events will not be bound twice, should the code be executed another time.
                </para></listitem>
            </itemizedlist>
        </para>
    </section>
</section>
