<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="dynamic-fields-extend-options">
    <title>How To Extend The Dynamic Fields</title>
    <para>
        There are many ways to extend the Dynamic Fields, the following sections will try to cover
        the most common scenarios.
    </para>
    <section id="dynamic-fields-extend-options-new-field">
        <title>Create a New Dynamic Field Type (for ticket or article objects)</title>
        <para>
            To create a new Dynamic Field Type is necessary to:
        </para>
        <itemizedlist mark='round'>
            <listitem>
                <para>
                    Create a Dynamic Field Driver:
                </para>
                <para>
                    This is the main module of the new field.
                </para>
            </listitem>
            <listitem>
                <para>
                    Create or use an existing Admin Dialog:
                </para>
                <para>
                    To have a management interface and set its configuration options.
                </para>
            </listitem>
            <listitem>
                <para>
                    Create a Configuration File:
                </para>
                <para>
                    To register the new field in the Backend (or new Admin Dialogs in the framework
                    if needed) and be able to create instances or it.
                </para>
            </listitem>
        </itemizedlist>
    </section>
    <section id="dynamic-fields-extend-options-new-field-new-object">
        <title>Create a New Dynamic Field Type (for other objects)</title>
        <para>
            To create a new Dynamic Field Type for other objects is necessary to:
        </para>
        <itemizedlist mark='round'>
            <listitem>
                <para>
                    Create a Dynamic Field Driver
                </para>
                <para>
                    This is the main module of the new Field.
                </para>
            </listitem>
            <listitem>
                <para>
                    Create an Object Type Delegate
                </para>
                <para>
                    This is necessary, even if the "other object" does not require any specific
                    data handling in its functions (e.g. after a value is set). All Object Type
                    Delegates must implement the functions that the Backend requires.
                </para>
                <para>
                    Take a look in the current Object Type Delegates to implement the same
                    functions, even if they just return a successful value for the "other object".
                </para>
            </listitem>
            <listitem>
                <para>
                    Create or use an existing Admin Dialog
                </para>
                <para>
                    To have a management interface and set its configuration options.
                </para>
            </listitem>
            <listitem>
                <para>
                    Implement Dynamic Fields in the Frontend Modules
                </para>
                <para>
                    To be able to use the Dynamic Fields.
                </para>
            </listitem>
            <listitem>
                <para>
                    Create a Configuration File
                </para>
                <para>
                    To register the new field in the Backend (or new Admin Dialogs in the framework
                    if needed) and be able to create instances or it. And make the needed settings
                    to show, hide or show the Dynamic Fields as Mandatory in the new screens.
                </para>
            </listitem>
        </itemizedlist>
    </section>
    <section id="dynamic-fields-extend-options-new-packages">
        <title>Create a New package to use Dynamic Fields</title>
        <para>
            To create a package to use existing dynamic fields is necessary to:
        </para>
        <itemizedlist mark='round'>
            <listitem>
                <para>
                    Implement Dynamic Fields in the Frontend Modules
                </para>
                <para>
                    To be able to use the Dynamic Fields.
                </para>
            </listitem>
            <listitem>
                <para>
                    Create a Configuration File
                </para>
                <para>
                    To give the end user the possibility to show, hide or show the Dynamic Fields as
                    Mandatory in the new screens.
                </para>
            </listitem>
        </itemizedlist>
    </section>
    <section id="dynamic-fields-extend-options-backend-functionalities">
        <title>Extend Backend and Drivers Functionalities</title>
        <para>
            It might be possible that the BackendObject does not have a needed function for
            custom developments, or could also be possible that it has the function needed, but the
            return format does not match the needs of the custom development, or that a new behavior
            is needed to execute the new or the old functions.
        </para>
        <para>
            The easiest way to do this, is to extend the current field files, for this is necessary
            to create a new Backend extension file that defines the new functions and create also
            Drivers extensions that implement this new functions for each field. This new drivers
            will only need to implement the new functions since the original drivers takes care of
            the standard functions. All this new new files does not need a constructor as they will
            be loaded as a base for the BackendObject and the drivers.
        </para>
        <para>
            The only restrictions are that the functions should be named different than the ones
            on the Backend and Drivers, otherwise they will be overwritten with current objects.
        </para>
        <para>
            Put the new Backend extension into the DynamicField directory (e.g.
             /$OTRS_HOME/Kernel/System/DynamicField/NewPackageBackend.pm and its Drivers in
             /$OTRS_HOME/Kernel/System/DynamicField/Driver/NewPackage*.pm
        </para>
        <para>
            New behaviors only need a small setting in the extensions configuration file.
        </para>
        <para>
            To create new Backend functions is needed to:
        </para>
        <itemizedlist mark='round'>
            <listitem>
                <para>
                    Create a New Backend extension module.
                </para>
                <para>
                    To define only the new functions.
                </para>
            </listitem>
            <listitem>
                <para>
                    Create the Dynamic Fields Driver extensions.
                </para>
                <para>
                    To implement only the new functions.
                </para>
            </listitem>
            <listitem>
                <para>
                    Implement New Dynamic Fields functions in the Frontend Modules
                </para>
                <para>
                    To be able to use the new Dynamic Fields functions.
                </para>
            </listitem>
            <listitem>
                <para>
                    Create a Configuration File
                </para>
                <para>
                    To register the new backend and drivers extensions and behaviors.
                </para>
            </listitem>
        </itemizedlist>
    </section>
    <section id="dynamic-fields-options-extend-other">
        <title>Other Extensions</title>
        <para>
            Other extensions could be a combination of the above examples.
        </para>
    </section>
</section>
