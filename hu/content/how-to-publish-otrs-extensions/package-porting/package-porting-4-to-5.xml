<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="package-porting-4-to-5">
    <title>OTRS 4-ről 5-re</title>
    <para>
        Ez a szakasz azokat a változtatásokat sorolja fel, amelyeket meg kell
vizsgálnia, amikor átírja a csomagját az OTRS 4-ről 5-re.
    </para>

    <section>
        <title>Átszerkesztett <filename>Kernel/Output/HTML</filename></title>
        <para>
            In OTRS 5, <filename>Kernel/Output/HTML</filename> was restructured. All
Perl modules (except <filename>Layout.pm</filename>) were moved to
subdirectories (one for every module layer). Template (theme)  files were
also moved from <filename>Kernel/Output/HTML/Standard</filename> to
<filename>Kernel/Output/HTML/Templates/Standard</filename>. Please perform
this migration also in your code.
        </para>
    </section>

    <section>
        <title>Elő-kimenetszűrők</title>
        <para>
            Az OTRS 5-tel többé nincs támogatás a <literal>pre</literal>
kimenetszűrőkhöz. Ezek a szűrők azelőtt változtatták meg a sablon tartalmát,
mielőtt az feldolgozásra került volna, és potenciálisan rossz
teljesítményproblémákhoz vezethettek, ugyanis a sablonokat többé nem
lehetett gyorstárazni, és minden alkalommal fel kellett dolgozni és le
kellett fordítani.
        </para>
        <para>
            Egyszerűen váltson a <literal>pre</literal> kimenetszűrőről a
<literal>post</literal> kimenetszűrőre. A tartalom lefordításához
futtathatja közvetlenül a <code>$LayoutObject->Translate()</code>
függvényt. Ha egyéb sablonszolgáltatásokra van szüksége, akkor egyszerűen
határozzon meg egy kis sablonfájlt a kimenetszűrőhöz, és használja azt a
tartalom megjelenítéséhez, mielőtt beültetné azt a fő adatokba. Néhány
esetben hasznos lehet a jQuery DOM műveletek használata is a képernyőn lévő
tartalom sorrendjének megváltoztatásához vagy cseréjéhez a reguláris
kifejezések használata helyett. Ebben az esetben láthatatlan tartalomként
kellene beültetnie az új kódot valahova az oldalba (például a
<literal>Hidden</literal> osztállyal), majd ezután áthelyezni a jQuery
használatával a megfelelő helyre a DOM-ban, és megjeleníteni azt.
        </para>
        <para>
            Az utó-kimenetszűrők használatának megkönnyítéséhez létezik egy új
mechanizmus is a HTML megjegyzéshorgok lekéréséhez bizonyos sablonoknál vagy
blokkoknál. Hozzáadhatja a modulbeállító XML-be a következőhöz hasonlóan:
        </para>
        <para>
            <programlisting><![CDATA[
<ConfigItem
Name="Frontend::Template::GenerateBlockHooks###100-OTRSBusiness-ContactWithData"
Required="1" Valid="1">
    <Description Translatable="1">Generate HTML comment hooks for
the specified blocks so that filters can use them.</Description>
    <Group>OTRSBusiness</Group>
    <SubGroup>Core</SubGroup>
    <Setting>
        <Hash>
            <Item Key="AgentTicketZoom">
                <Array>
                    <Item>CustomerTable</Item>
                </Array>
            </Item>
        </Hash>
    </Setting>
</ConfigItem>
            ]]></programlisting>
        </para>
        <para>
            Ez azt fogja okozni, hogy az <filename>AgentTicketZoom.tt</filename> fájlban
lévő <literal>CustomerTable</literal> blokk át lesz alakítva a HTML
megjegyzésekben minden alkalommal, amikor megjelenítésre kerül:
        </para>
        <para>
            <programlisting><![CDATA[
<!--HookStartCustomerTable-->
... blokk kimenet ...
<!--HookEndCustomerTable-->
            ]]></programlisting>
        </para>
        <para>
            Ezzel a mechanizmussal minden csomag csak azokat a blokkhorgokat kérheti,
amelyekre szüksége van, és következetesen kerülnek megjelenítésre. Ezek a
HTML megjegyzések használhatók ezután a kimenetszűrőben az egyszerű
reguláris kifejezés illesztéshez.
        </para>
    </section>

    <section>
        <title>IE 8 és IE 9</title>
        <para>
            Az IE 8 és IE 9 támogatást <ulink
url="https://github.com/OTRS/otrs/commit/3b1aff21984d7b32f626df95e072337245615b36">eldobták</ulink>.
Eltávolíthat minden kerülőmegoldást a kódjából, amelyet ezekhez a
platformokhoz készített, valamint az összes olyan régi
<literal>&lt;CSS_IE7&gt;</literal> vagy <literal>&lt;CSS_IE8&gt;</literal>
betöltő címkét, amely még esetleg megbújik az XML beállítófájljaiban.
        </para>
    </section>

    <section>
        <title>Általános felület API változás a „Ticket” csatlakozóban</title>
        <para>
            A <code>TicketGet()</code> művelet másképpen ad vissza dinamikus mező
adatokat a jegyből és a bejegyzésből mint az OTRS 4-ben. Mostantól ezek
tisztán el vannak választva a többi statikus jegy- és bejegyzésmezőktől -
innentől kezdve csoportosítva vannak egy <literal>DynamicField</literal>
nevű listába. Eszerint alakítson át minden olyan alkalmazást, amely ezt a
műveletet használja.
        </para>
        <para>
            <programlisting><![CDATA[
# changed from:

Ticket => [
{
    TicketNumber       => '20101027000001',
    Title              => 'some title',
    ...
    DynamicField_X     => 'value_x',
},
]

# to:

Ticket => [
{
    TicketNumber       => '20101027000001',
    Title              => 'some title',
    ...
    DynamicField => [
        {
            Name  => 'some name',
            Value => 'some value',
        },
    ],
},
]
            ]]></programlisting>
        </para>
    </section>
    <section>
        <title>Előnézeti függvények a dinamikus statisztikákban</title>
        <para>
            The new statistics GUI provides a preview for the current
configuration. This must be implemented in the statistic modules and usually
returns fake / random data for speed reasons. So for any dynamic (matrix)
statistic that provides the method <code>GetStatElement()</code> you should
also add a method <code>GetStatElementPreview()</code>, and for every
dynamic (table) statistic that provides <code>GetStatTable()</code> you
should accordingly add <code>GetStatTablePreview()</code>. Otherwise the
preview in the new statistics GUI will not work for your statistics. You can
find example implementations in the default OTRS statistics.
        </para>
    </section>
    <section>
        <title>Eldobott HTML nyomtatás</title>
        <para>
            Until OTRS 5, the Perl module <literal>PDF::API2</literal> was not present
on all systems. Therefore a fallback HTML print mode existed. With OTRS 5,
the module is now bundled and HTML print was dropped.
<code>$LayoutObject->PrintHeader()</code> and <code>PrintFooter()</code> are
not available any more. Please remove the HTML print fallback from your code
and change it to generate PDF if necessary.
        </para>
    </section>
    <section>
        <title>Továbbfejlesztett fordítási szöveg kinyerés</title>
        <para>
            Until OTRS 5, translatable strings could not be extracted from Perl code and
Database XML definitions. This is now possible and makes dummy templates
like <filename>AAA*.tt</filename> obsolete. Please see <link
linkend="localization-translation-mechanism">this section</link> for
details.
        </para>
    </section>

</section>
