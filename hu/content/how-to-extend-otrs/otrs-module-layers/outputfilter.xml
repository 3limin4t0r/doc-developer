<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<section id="outputfilter">
    <title>Kimenetszűrő</title>
    <para>
        A kimenetszűrők lehetővé teszik a HTML módosítását röptében. A bevált
gyakorlat a kimenetszűrők használata a <filename>.tt</filename> fájlok
közvetlen módosítása helyett. Három jó ok létezik erre. Amikor ugyanazt az
átdolgozást kell alkalmazni számos előtétprogram modulon, akkor az
átdolgozást csak egyszer kell megvalósítani. A második előnye, hogy amikor
az OTRS-t frissítik, akkor megvan az esély arra, hogy a szűrőt nem kell
frissíteni, ha a hozzá tartozó minta nem változott. Amikor két kiterjesztés
ugyanazt a fájlt módosítja, akkor ütközés lép fel a második csomag
telepítése során. Ez az ütközés feloldható két kimenetszűrő használatával,
amelyek ugyanazt az előtétprogram modult módosítják.
    </para>
    <para>
        Három különböző fajta kimenetszűrő létezik. Ezek a HTML tartalom
előállításának különböző szakaszaiban aktívak.
    </para>
    <section id="outputfilter_filterelement_post">
        <title><literal>FilterElementPost</literal></title>
        <para>
            Ezek a szűrők lehetővé teszik egy sablon kimenetének módosítást, miután az
megjelenítésre került.
        </para>
        <para>
            A tartalom lefordításához futtathatja közvetlenül a
<code>$LayoutObject->Translate()</code> függvényt. Ha egyéb
sablonszolgáltatásokra van szüksége, akkor egyszerűen határozzon meg egy kis
sablonfájlt a kimenetszűrőhöz, és használja azt a tartalom megjelenítéséhez,
mielőtt beültetné azt a fő adatokba. Néhány esetben hasznos lehet a jQuery
DOM műveletek használata is a képernyőn lévő tartalom sorrendjének
megváltoztatásához vagy cseréjéhez a reguláris kifejezések használata
helyett. Ebben az esetben láthatatlan tartalomként kellene beültetnie az új
kódot valahova az oldalba (például a <literal>Hidden</literal> osztállyal),
majd ezután áthelyezni a jQuery használatával a megfelelő helyre a DOM-ban,
és megjeleníteni azt.
        </para>
        <para>
            Az utó-kimenetszűrők használatának megkönnyítéséhez létezik egy mechanizmus
is a HTML megjegyzéshorgok lekéréséhez bizonyos sablonoknál vagy
blokkoknál. Hozzáadhatja a modulbeállító XML-be a következőhöz hasonlóan:
        </para>
        <para>
            <programlisting><![CDATA[
<ConfigItem
Name="Frontend::Template::GenerateBlockHooks###100-OTRSBusiness-ContactWithData"
Required="1" Valid="1">
    <Description Translatable="1">Generate HTML comment hooks for
the specified blocks so that filters can use them.</Description>
    <Group>OTRSBusiness</Group>
    <SubGroup>Core</SubGroup>
    <Setting>
        <Hash>
            <Item Key="AgentTicketZoom">
                <Array>
                    <Item>CustomerTable</Item>
                </Array>
            </Item>
        </Hash>
    </Setting>
</ConfigItem>
            ]]></programlisting>
        </para>
        <para>
            Ez azt fogja okozni, hogy az <filename>AgentTicketZoom.tt</filename> fájlban
lévő <literal>CustomerTable</literal> blokk át lesz alakítva a HTML
megjegyzésekben minden alkalommal, amikor megjelenítésre kerül:
        </para>
        <para>
            <programlisting><![CDATA[
<!--HookStartCustomerTable-->
... blokk kimenet ...
<!--HookEndCustomerTable-->
            ]]></programlisting>
        </para>
        <para>
            Ezzel a mechanizmussal minden csomag csak azokat a blokkhorgokat kérheti,
amelyekre szüksége van, és következetesen kerülnek megjelenítésre. Ezek a
HTML megjegyzések használhatók ezután a kimenetszűrőben az egyszerű
reguláris kifejezés illesztéshez.
        </para>
    </section>
    <section id="outputfilter_filtercontent">
        <title><literal>FilterContent</literal></title>
        <para>
            Ez a fajta szűrő lehetővé teszi a teljes HTML kimenet feldolgozását a
kérésnél közvetlenül azelőtt, hogy kiküldésre kerül a böngészőnek. Ez
globális átalakításokhoz használható.
        </para>
    </section>
    <section id="outputfilter_filtertext">
        <title><literal>FilterText</literal></title>
        <para>
            Ez a fajta kimenetszűrő egy bővítmény a
<literal>Kernel::Output::HTML::Layout::Ascii2HTML()</literal> metódushoz, és
csak akkor aktív, amikor a <literal>LinkFeature</literal> paraméter 1-re van
állítva. Így a <literal>FilterText</literal> kimenetszűrők jelenleg csak az
egyszerű szöveges bejegyzések törzsének megjelenítésénél aktívak. Az
egyszerű szöveges bejegyzéseket a bejövő nem HTML levelek állítják elő,
illetve amikor az OTRS úgy van beállítva, hogy ne használja a Rich Text
szolgáltatást az előtétprogramon.
        </para>
    </section>
    <section id="outputfilter-code">
        <title>Kódpélda</title>
        <para>
            Lásd a <literal>TemplateModule</literal> csomagot.
        </para>
    </section>
    <section id="outputfilter-configuration">
        <title>Beállítási példa</title>
        <para>
            Lásd a <literal>TemplateModule</literal> csomagot.
        </para>
    </section>
    <section id="outputfilter-usecases">
        <title>Használati esetek</title>
        <section id="outputfilter-usecase-10">
            <title>További jegyattribútumok megjelenítése az <literal>AgentTicketZoom</literal>
képernyőn</title>
            <para>
                Ez egy <literal>FilterElementPost</literal> kimenetszűrővel valósítható meg.
            </para>
        </section>
        <section id="outputfilter-usecase-30">
            <title>A szolgáltatásválasztás megjelenítése többszintű menüként</title>
            <para>
                Használjon egy <literal>FilterElementPost</literal> szűrőt ehhez a
szolgáltatáshoz. A választható szolgáltatások listája a feldolgozott
sablonkimenetből dolgozható fel. A többszintű választás a
szolgáltatáslistából építhető fel, és szúrható be a sablontartalomba. Egy
<literal>FilterElementPost</literal> kimenetszűrőt kell használni ehhez.
            </para>
        </section>
        <section id="outputfilter-usecase-40">
            <title>Hivatkozások létrehozása az egyszerű szöveges bejegyzés törzseiben</title>
            <para>
                Egy biotechnológiai vállalat IPI00217472 formátumú génneveket használ az
egyszerű szöveges bejegyzésekben. Egy <literal>FilterText</literal>
kimenetszűrő használható a szekvencia-adatbázisra mutató hivatkozások
létrehozásához a génneveknél, például
http://srs.ebi.ac.uk/srsbin/cgi-bin/wgetz?-e+[IPI-acc:IPI00217472]+-vn+2
formában.
            </para>
        </section>
        <section id="outputfilter-usecase-50">
            <title>Az aktív tartalom megtiltása</title>
            <para>
                Van egy olyan tűzfalszabály, amely megtiltja az összes aktív
tartalmat. Azért, hogy elkerüljük a tűzfal visszautasítását, az
<literal>&lt;applet&gt;</literal> HTML-címke kiszűrhető egy
<literal>FilterContent</literal> kimenetszűrővel.
            </para>
        </section>
    </section>
    <section id="outputfilter-caveats">
        <title>Ellenjavaslatok és figyelmeztetések</title>
        <para>
            Minden <literal>FilterElementPost</literal> kimenetszűrő felépítésre és
futtatásra kerül minden olyan beállított sablonnál, amely szükséges az
aktuális kéréshez. Így a kimenetszűrő alacsony teljesítménye vagy a szűrők
nagy száma komolyan csökkentheti a teljesítményt.
        </para>
    </section>
    <section id="outputfilter-bestpractice">
        <title>Bevált gyakorlatok</title>
        <para>
            A rugalmasság növelésének érdekében az érintett sablonok listáját be kell
állítani a rendszerbeállításokban.
        </para>
    </section>
    <section id="outputfilter-releases">
        <title>Kiadási elérhetőség</title>
        <para>
            A kimenetszűrők az OTRS 2.4-es verziójától érhetők el. A
<literal>FilterElementPre</literal> típus eldobásra került az OTRS 5-tel.
        </para>
    </section>
</section>
